{"ast":null,"code":"var _jsxFileName = \"D:\\\\Weather-apppppppp\\\\weather-weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport CurrentLocation from \"./components/CurrentLocation\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getWeatherIcon(wmoCode) {\n  const icons = new Map([[[0], \"☀️\"], [[1], \"🌤\"], [[2], \"⛅️\"], [[3], \"☁️\"], [[45, 48], \"🌫\"], [[51, 56, 61, 66, 80], \"🌦\"], [[53, 55, 63, 65, 57, 67, 81, 82], \"🌧\"], [[71, 73, 75, 77, 85, 86], \"🌨\"], [[95], \"🌩\"], [[96, 99], \"⛈\"]]);\n  const arr = [...icons.keys()].find(key => key.includes(wmoCode));\n  if (!arr) return \"NOT FOUND\";\n  return icons.get(arr);\n}\nfunction convertToFlag(countryCode) {\n  const codePoints = countryCode.toUpperCase().split(\"\").map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\nfunction formatDay(dateStr) {\n  return new Intl.DateTimeFormat(\"en\", {\n    weekday: \"short\"\n  }).format(new Date(dateStr));\n}\nfunction App() {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [displayLocation, setDisplayLocation] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [hourlyWeather, setHourlyWeather] = useState([]);\n  useEffect(() => {\n    // Request notification permission on mount\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }, []);\n  async function fetchWeather() {\n    try {\n      setIsLoading(true);\n      const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${location}`);\n      const geoData = await geoRes.json();\n      console.log(geoData);\n      if (!geoData.results) throw new Error(\"Location not found\");\n      const {\n        latitude,\n        longitude,\n        timezone,\n        name,\n        country_code\n      } = geoData.results.at(0);\n      setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\n      const weatherRes = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min&hourly=temperature_2m,weathercode`);\n      const weatherData = await weatherRes.json();\n      setWeather(weatherData.daily);\n      setHourlyWeather(weatherData.hourly);\n\n      // Set up a notification for hourly weather updates\n      sendHourlyNotifications(weatherData.hourly);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  function sendHourlyNotifications(hourlyWeather) {\n    // Set an interval to send notifications every hour\n    setInterval(() => {\n      const currentHourIndex = new Date().getHours(); // Get current hour\n\n      const weatherForHour = {\n        time: hourlyWeather.time[currentHourIndex],\n        temperature: hourlyWeather.temperature_2m[currentHourIndex],\n        description: getWeatherIcon(hourlyWeather.weathercode[currentHourIndex])\n      };\n      if (Notification.permission === \"granted\") {\n        new Notification(`Weather Update at ${weatherForHour.time}`, {\n          body: `Temp: ${weatherForHour.temperature}°C, ${weatherForHour.description}`\n        });\n      }\n    }, 3600000); // 1 hour interval\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      location: location,\n      setLocation: setLocation,\n      fetchWeather: fetchWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentLocation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_city\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for location...\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeather,\n        children: \"Get weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), weather.weathercode && /*#__PURE__*/_jsxDEV(Weather, {\n      weather: weather,\n      location: displayLocation,\n      hourlyWeather: hourlyWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jhoq9fVtyqsyQMuWTCFn4aZ5J08=\");\n_c = App;\nexport default App;\nfunction Weather({\n  weather,\n  location,\n  hourlyWeather\n}) {\n  const {\n    temperature_2m_max: max,\n    temperature_2m_min: min,\n    time: dates,\n    weathercode: codes\n  } = weather;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"weather\",\n      children: dates.map((date, i) => /*#__PURE__*/_jsxDEV(Day, {\n        date: date,\n        max: max.at(i),\n        min: min.at(i),\n        code: codes.at(i),\n        isToday: i === 0\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HourlyWeather, {\n      hours: hourlyWeather.time.map((time, i) => ({\n        time,\n        temperature: hourlyWeather.temperature_2m[i],\n        description: getWeatherIcon(hourlyWeather.weathercode[i])\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Weather;\nfunction Day({\n  date,\n  max,\n  min,\n  code,\n  isToday\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"day\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"large-icon\",\n      children: getWeatherIcon(code)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isToday ? \"Today\" : formatDay(date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [Math.floor(min), \"\\xB0 \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [Math.ceil(max), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Day;\nfunction HourlyWeather({\n  hours\n}) {\n  _s2();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [animationClass, setAnimationClass] = useState(\"fade-in\");\n  const handleNext = () => {\n    setAnimationClass(\"fade-out\");\n    setTimeout(() => {\n      setCurrentIndex(prevIndex => prevIndex === hours.length - 1 ? 0 : prevIndex + 1);\n      setAnimationClass(\"fade-in\");\n    }, 200); // Match this duration to your CSS transition time\n  };\n  const handlePrevious = () => {\n    setAnimationClass(\"fade-out\");\n    setTimeout(() => {\n      setCurrentIndex(prevIndex => prevIndex === 0 ? hours.length - 1 : prevIndex - 1);\n      setAnimationClass(\"fade-in\");\n    }, 200); // Match this duration to your CSS transition time\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `weather-item ${animationClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hourly Weather Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: hours[currentIndex].time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [hours[currentIndex].temperature, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: hours[currentIndex].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrevious,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s2(HourlyWeather, \"I9RvGo++zKoSA8JbppNtxD9TQBw=\");\n_c4 = HourlyWeather;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Weather\");\n$RefreshReg$(_c3, \"Day\");\n$RefreshReg$(_c4, \"HourlyWeather\");","map":{"version":3,"names":["React","useState","useEffect","Header","CurrentLocation","Footer","jsxDEV","_jsxDEV","getWeatherIcon","wmoCode","icons","Map","arr","keys","find","key","includes","get","convertToFlag","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","formatDay","dateStr","Intl","DateTimeFormat","weekday","format","Date","App","_s","location","setLocation","isLoading","setIsLoading","displayLocation","setDisplayLocation","weather","setWeather","hourlyWeather","setHourlyWeather","Notification","permission","requestPermission","fetchWeather","geoRes","fetch","geoData","json","console","log","results","Error","latitude","longitude","timezone","name","country_code","at","weatherRes","weatherData","daily","hourly","sendHourlyNotifications","err","error","setInterval","currentHourIndex","getHours","weatherForHour","time","temperature","temperature_2m","description","weathercode","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","Weather","_c","temperature_2m_max","max","temperature_2m_min","min","dates","codes","date","i","Day","code","isToday","HourlyWeather","hours","_c2","Math","floor","ceil","_c3","_s2","currentIndex","setCurrentIndex","animationClass","setAnimationClass","handleNext","setTimeout","prevIndex","length","handlePrevious","_c4","$RefreshReg$"],"sources":["D:/Weather-apppppppp/weather-weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport CurrentLocation from \"./components/CurrentLocation\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./App.css\";\r\n\r\nfunction getWeatherIcon(wmoCode) {\r\n  const icons = new Map([\r\n    [[0], \"☀️\"],\r\n    [[1], \"🌤\"],\r\n    [[2], \"⛅️\"],\r\n    [[3], \"☁️\"],\r\n    [[45, 48], \"🌫\"],\r\n    [[51, 56, 61, 66, 80], \"🌦\"],\r\n    [[53, 55, 63, 65, 57, 67, 81, 82], \"🌧\"],\r\n    [[71, 73, 75, 77, 85, 86], \"🌨\"],\r\n    [[95], \"🌩\"],\r\n    [[96, 99], \"⛈\"],\r\n  ]);\r\n\r\n  const arr = [...icons.keys()].find((key) => key.includes(wmoCode));\r\n  if (!arr) return \"NOT FOUND\";\r\n  return icons.get(arr);\r\n}\r\n\r\nfunction convertToFlag(countryCode) {\r\n  const codePoints = countryCode\r\n    .toUpperCase()\r\n    .split(\"\")\r\n    .map((char) => 127397 + char.charCodeAt());\r\n\r\n  return String.fromCodePoint(...codePoints);\r\n}\r\n\r\nfunction formatDay(dateStr) {\r\n  return new Intl.DateTimeFormat(\"en\", {\r\n    weekday: \"short\",\r\n  }).format(new Date(dateStr));\r\n}\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [displayLocation, setDisplayLocation] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const [hourlyWeather, setHourlyWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Request notification permission on mount\r\n    if (Notification.permission !== \"granted\") {\r\n      Notification.requestPermission();\r\n    }\r\n  }, []);\r\n\r\n  async function fetchWeather() {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const geoRes = await fetch(\r\n        `https://geocoding-api.open-meteo.com/v1/search?name=${location}`\r\n      );\r\n      const geoData = await geoRes.json();\r\n      console.log(geoData);\r\n\r\n      if (!geoData.results) throw new Error(\"Location not found\");\r\n\r\n      const { latitude, longitude, timezone, name, country_code } =\r\n        geoData.results.at(0);\r\n\r\n      setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\r\n\r\n      const weatherRes = await fetch(\r\n        `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min&hourly=temperature_2m,weathercode`\r\n      );\r\n      const weatherData = await weatherRes.json();\r\n\r\n      setWeather(weatherData.daily);\r\n      setHourlyWeather(weatherData.hourly);\r\n      \r\n      // Set up a notification for hourly weather updates\r\n      sendHourlyNotifications(weatherData.hourly);\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function sendHourlyNotifications(hourlyWeather) {\r\n    // Set an interval to send notifications every hour\r\n    setInterval(() => {\r\n      const currentHourIndex = new Date().getHours(); // Get current hour\r\n      \r\n      const weatherForHour = {\r\n        time: hourlyWeather.time[currentHourIndex],\r\n        temperature: hourlyWeather.temperature_2m[currentHourIndex],\r\n        description: getWeatherIcon(hourlyWeather.weathercode[currentHourIndex]),\r\n      };\r\n\r\n      if (Notification.permission === \"granted\") {\r\n        new Notification(`Weather Update at ${weatherForHour.time}`, {\r\n          body: `Temp: ${weatherForHour.temperature}°C, ${weatherForHour.description}`,\r\n        });\r\n      }\r\n    }, 3600000); // 1 hour interval\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header location={location} setLocation={setLocation} fetchWeather={fetchWeather} />\r\n      <CurrentLocation />\r\n      <div className=\"search_city\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for location...\"\r\n          value={location}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n        />\r\n        <button onClick={fetchWeather}>Get weather</button>\r\n        {isLoading && <p className=\"loader\">Loading...</p>}\r\n      </div>\r\n      {weather.weathercode && (\r\n        <Weather weather={weather} location={displayLocation} hourlyWeather={hourlyWeather} />\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction Weather({ weather, location, hourlyWeather }) {\r\n  const {\r\n    temperature_2m_max: max,\r\n    temperature_2m_min: min,\r\n    time: dates,\r\n    weathercode: codes,\r\n  } = weather;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather {location}</h2>\r\n      <ul className=\"weather\">\r\n        {dates.map((date, i) => (\r\n          <Day\r\n            date={date}\r\n            max={max.at(i)}\r\n            min={min.at(i)}\r\n            code={codes.at(i)}\r\n            key={date}\r\n            isToday={i === 0}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <HourlyWeather hours={hourlyWeather.time.map((time, i) => ({\r\n        time,\r\n        temperature: hourlyWeather.temperature_2m[i],\r\n        description: getWeatherIcon(hourlyWeather.weathercode[i]),\r\n      }))} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Day({ date, max, min, code, isToday }) {\r\n  return (\r\n    <li className=\"day\">\r\n      <span className=\"large-icon\">{getWeatherIcon(code)}</span>\r\n      <p>{isToday ? \"Today\" : formatDay(date)}</p>\r\n      <p>\r\n        {Math.floor(min)}&deg; &mdash; <strong>{Math.ceil(max)}&deg;</strong>\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction HourlyWeather({ hours }) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [animationClass, setAnimationClass] = useState(\"fade-in\");\r\n\r\n  const handleNext = () => {\r\n    setAnimationClass(\"fade-out\");\r\n    setTimeout(() => {\r\n      setCurrentIndex((prevIndex) =>\r\n        prevIndex === hours.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n      setAnimationClass(\"fade-in\");\r\n    }, 200); // Match this duration to your CSS transition time\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setAnimationClass(\"fade-out\");\r\n    setTimeout(() => {\r\n      setCurrentIndex((prevIndex) =>\r\n        prevIndex === 0 ? hours.length - 1 : prevIndex - 1\r\n      );\r\n      setAnimationClass(\"fade-in\");\r\n    }, 200); // Match this duration to your CSS transition time\r\n  };\r\n\r\n  return (\r\n    <div className=\"hourly-weather\">\r\n      <div className={`weather-item ${animationClass}`}>\r\n        <h3>Hourly Weather Update</h3>\r\n        <h3>{hours[currentIndex].time}</h3>\r\n        <p>{hours[currentIndex].temperature}°</p>\r\n        <p>{hours[currentIndex].description}</p>\r\n      </div>\r\n      <button onClick={handlePrevious}>Previous</button>\r\n      <button onClick={handleNext}>Next</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}