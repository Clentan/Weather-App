{"ast":null,"code":"var _jsxFileName = \"D:\\\\Weather-apppppppp\\\\weather-weather\\\\src\\\\components\\\\CurrentLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CurrentLocation() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [fahrenheit, setFahrenheit] = useState(null);\n  const [temperatureUnit, setTemperatureUnit] = useState('C'); // 'C' for Celsius, 'F' for Fahrenheit\n  const [alerts, setAlerts] = useState(null); // Store weather alerts\n\n  useEffect(() => {\n    async function fetchCurrentLocation() {\n      if (navigator.geolocation.getCurrentPosition) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          const appid = \"6a4306a0f2c73c28dc5c3bbf739e87d0\";\n          try {\n            // Fetch both current weather and alerts using the One Call API\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${appid}&units=metric`);\n            const data = await response.json();\n\n            // Check if the location data was found\n            if (data.current) {\n              setLocation(data);\n              setIsLoading(false);\n\n              // Save weather data to localStorage\n              saveToLocalStorage(data);\n\n              // Calculate and set temperature in Fahrenheit\n              calculate(data);\n\n              // Check for weather alerts\n              if (data.alerts && data.alerts.length > 0) {\n                setAlerts(data.alerts);\n                showNotification(data.alerts[0].event, data.alerts[0].description);\n              }\n            } else {\n              setError('Location not found. Please ensure your location services are enabled.');\n              setIsLoading(false);\n            }\n          } catch (error) {\n            setError('Error fetching the location data. Please check your connection.');\n            setIsLoading(false);\n            console.error('Error fetching the location data:', error);\n          }\n        }, error => {\n          handleGeolocationError(error);\n          loadFromLocalStorage(); // Fallback to cached data if available\n        });\n      } else {\n        setError('Geolocation is not supported by this browser.');\n        loadFromLocalStorage();\n      }\n    }\n    fetchCurrentLocation();\n  }, []);\n  function handleGeolocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        setError(\"Location access denied. Please allow location permissions in your browser.\");\n        break;\n      case error.POSITION_UNAVAILABLE:\n        setError(\"Location information is unavailable.\");\n        break;\n      case error.TIMEOUT:\n        setError(\"Request to get location timed out.\");\n        break;\n      default:\n        setError(\"An unknown error occurred.\");\n        break;\n    }\n  }\n  function calculate(location) {\n    const tempCelsius = location.current.temp;\n    const tempFahrenheit = tempCelsius * 1.8 + 32;\n    setFahrenheit(tempFahrenheit); // Store Fahrenheit temperature\n  }\n  function saveToLocalStorage(data) {\n    const weatherData = {\n      location: data,\n      timestamp: Date.now()\n    };\n    localStorage.setItem('currentWeather', JSON.stringify(weatherData));\n  }\n  function loadFromLocalStorage() {\n    const cachedData = localStorage.getItem('currentWeather');\n    if (cachedData) {\n      const {\n        location,\n        timestamp\n      } = JSON.parse(cachedData);\n\n      // Use the cached data if it's less than 6 hours old\n      if (Date.now() - timestamp < 6 * 60 * 60 * 1000) {\n        setLocation(location);\n        calculate(location);\n      } else {\n        setError('Cached data is too old. Please connect to the internet to get the latest weather information.');\n      }\n    } else {\n      setError('No cached data available. Please connect to the internet.');\n    }\n    setIsLoading(false);\n  }\n  function toggleTemperatureUnit() {\n    setTemperatureUnit(prevUnit => prevUnit === 'C' ? 'F' : 'C');\n  }\n\n  // Function to display browser notification\n  function showNotification(title, message) {\n    if (\"Notification\" in window && Notification.permission === \"granted\") {\n      new Notification(title, {\n        body: message\n      });\n    } else if (Notification.permission !== \"denied\") {\n      Notification.requestPermission().then(permission => {\n        if (permission === \"granted\") {\n          new Notification(title, {\n            body: message\n          });\n        }\n      });\n    }\n  }\n\n  // Determine the temperature to display based on the selected unit\n  const displayTemperature = temperatureUnit === 'C' ? location === null || location === void 0 ? void 0 : location.current.temp : fahrenheit;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : location && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"current\",\n        children: [\"Your Current Location: \", location.timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Current\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${location.current.weather[0].icon}.png`,\n          alt: location.current.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Location: \", location.timezone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", displayTemperature, \"\\xB0\", temperatureUnit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Weather: \", location.current.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", location.current.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind Speed: \", location.current.wind_speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"change\",\n          onClick: toggleTemperatureUnit,\n          children: [\"Switch to \", temperatureUnit === 'C' ? 'Fahrenheit' : 'Celsius']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this), alerts && alerts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alerts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Weather Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }, this), alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: alert.event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: alert.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Effective: \", new Date(alert.start * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Expires: \", new Date(alert.end * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 41\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrentLocation, \"ZHqJ/uztF9M6GzxXbNdSnnP11dM=\");\n_c = CurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"CurrentLocation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentLocation","_s","location","setLocation","error","setError","isLoading","setIsLoading","fahrenheit","setFahrenheit","temperatureUnit","setTemperatureUnit","alerts","setAlerts","fetchCurrentLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","appid","response","fetch","data","json","current","saveToLocalStorage","calculate","length","showNotification","event","description","console","handleGeolocationError","loadFromLocalStorage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","tempCelsius","temp","tempFahrenheit","weatherData","timestamp","Date","now","localStorage","setItem","JSON","stringify","cachedData","getItem","parse","toggleTemperatureUnit","prevUnit","title","message","window","Notification","permission","body","requestPermission","then","displayTemperature","children","fileName","_jsxFileName","lineNumber","columnNumber","className","timezone","src","weather","icon","alt","humidity","wind_speed","onClick","map","alert","index","start","toLocaleString","end","_c","$RefreshReg$"],"sources":["D:/Weather-apppppppp/weather-weather/src/components/CurrentLocation.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function CurrentLocation() {\r\n    const [location, setLocation] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [fahrenheit, setFahrenheit] = useState(null);\r\n    const [temperatureUnit, setTemperatureUnit] = useState('C'); // 'C' for Celsius, 'F' for Fahrenheit\r\n    const [alerts, setAlerts] = useState(null); // Store weather alerts\r\n\r\n    useEffect(() => {\r\n        async function fetchCurrentLocation() {\r\n            if (navigator.geolocation.getCurrentPosition) {\r\n                navigator.geolocation.getCurrentPosition(async (position) => {\r\n                    const lat = position.coords.latitude;\r\n                    const lon = position.coords.longitude;\r\n                    const appid = \"6a4306a0f2c73c28dc5c3bbf739e87d0\";\r\n\r\n                    try {\r\n                        // Fetch both current weather and alerts using the One Call API\r\n                        const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${appid}&units=metric`);\r\n                        const data = await response.json();\r\n                        \r\n                        // Check if the location data was found\r\n                        if (data.current) {\r\n                            setLocation(data);\r\n                            setIsLoading(false);\r\n\r\n                            // Save weather data to localStorage\r\n                            saveToLocalStorage(data);\r\n\r\n                            // Calculate and set temperature in Fahrenheit\r\n                            calculate(data);\r\n\r\n                            // Check for weather alerts\r\n                            if (data.alerts && data.alerts.length > 0) {\r\n                                setAlerts(data.alerts);\r\n                                showNotification(data.alerts[0].event, data.alerts[0].description);\r\n                            }\r\n                        } else {\r\n                            setError('Location not found. Please ensure your location services are enabled.');\r\n                            setIsLoading(false);\r\n                        }\r\n                    } catch (error) {\r\n                        setError('Error fetching the location data. Please check your connection.');\r\n                        setIsLoading(false);\r\n                        console.error('Error fetching the location data:', error);\r\n                    }\r\n                }, (error) => {\r\n                    handleGeolocationError(error);\r\n                    loadFromLocalStorage(); // Fallback to cached data if available\r\n                });\r\n            } else {\r\n                setError('Geolocation is not supported by this browser.');\r\n                loadFromLocalStorage();\r\n            }\r\n        }\r\n\r\n        fetchCurrentLocation();\r\n    }, []);\r\n\r\n    function handleGeolocationError(error) {\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                setError(\"Location access denied. Please allow location permissions in your browser.\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                setError(\"Location information is unavailable.\");\r\n                break;\r\n            case error.TIMEOUT:\r\n                setError(\"Request to get location timed out.\");\r\n                break;\r\n            default:\r\n                setError(\"An unknown error occurred.\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    function calculate(location) {\r\n        const tempCelsius = location.current.temp;\r\n        const tempFahrenheit = (tempCelsius * 1.8) + 32;\r\n        setFahrenheit(tempFahrenheit); // Store Fahrenheit temperature\r\n    }\r\n\r\n    function saveToLocalStorage(data) {\r\n        const weatherData = {\r\n            location: data,\r\n            timestamp: Date.now(),\r\n        };\r\n        localStorage.setItem('currentWeather', JSON.stringify(weatherData));\r\n    }\r\n\r\n    function loadFromLocalStorage() {\r\n        const cachedData = localStorage.getItem('currentWeather');\r\n        if (cachedData) {\r\n            const { location, timestamp } = JSON.parse(cachedData);\r\n\r\n            // Use the cached data if it's less than 6 hours old\r\n            if (Date.now() - timestamp < 6 * 60 * 60 * 1000) {\r\n                setLocation(location);\r\n                calculate(location);\r\n            } else {\r\n                setError('Cached data is too old. Please connect to the internet to get the latest weather information.');\r\n            }\r\n        } else {\r\n            setError('No cached data available. Please connect to the internet.');\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    function toggleTemperatureUnit() {\r\n        setTemperatureUnit((prevUnit) => (prevUnit === 'C' ? 'F' : 'C'));\r\n    }\r\n\r\n    // Function to display browser notification\r\n    function showNotification(title, message) {\r\n        if (\"Notification\" in window && Notification.permission === \"granted\") {\r\n            new Notification(title, { body: message });\r\n        } else if (Notification.permission !== \"denied\") {\r\n            Notification.requestPermission().then((permission) => {\r\n                if (permission === \"granted\") {\r\n                    new Notification(title, { body: message });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Determine the temperature to display based on the selected unit\r\n    const displayTemperature = temperatureUnit === 'C' \r\n        ? location?.current.temp\r\n        : fahrenheit;\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ? (\r\n                <h1>Loading...</h1>\r\n            ) : error ? (\r\n                <h1>{error}</h1>\r\n            ) : (\r\n                location && (\r\n                    <>\r\n                        <h1 className='current'>Your Current Location: {location.timezone}</h1>\r\n                        <ul className=\"Current\">\r\n                            <h3>Today's Weather</h3>\r\n                            <img src={`https://openweathermap.org/img/wn/${location.current.weather[0].icon}.png`} alt={location.current.weather[0].description} />\r\n                            <li>Location: {location.timezone}</li>\r\n                            <li>Temperature: {displayTemperature}°{temperatureUnit}</li>\r\n                            <li>Weather: {location.current.weather[0].description}</li>\r\n                            <li>Humidity: {location.current.humidity}%</li>\r\n                            <li>Wind Speed: {location.current.wind_speed} m/s</li>\r\n                            <button \r\n                                className='change'\r\n                                onClick={toggleTemperatureUnit}>\r\n                                Switch to {temperatureUnit === 'C' ? 'Fahrenheit' : 'Celsius'}\r\n                            </button>\r\n                        </ul>\r\n\r\n                        {alerts && alerts.length > 0 && (\r\n                            <div className=\"alerts\">\r\n                                <h2>Weather Alerts</h2>\r\n                                {alerts.map((alert, index) => (\r\n                                    <div key={index} className=\"alert\">\r\n                                        <h3>{alert.event}</h3>\r\n                                        <p>{alert.description}</p>\r\n                                        <p>Effective: {new Date(alert.start * 1000).toLocaleString()}</p>\r\n                                        <p>Expires: {new Date(alert.end * 1000).toLocaleString()}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}